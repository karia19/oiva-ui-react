{"version":3,"file":"index.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/components/ImageGridModal/components/modal.tsx","../src/components/ImageGridModal/components/Arrows.tsx","../src/components/ImageGridModal/utils.ts","../src/components/ImageGridModal/ImageGridModal.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from \"react\";\nimport './modal.css'\nimport { imageProps } from \"../../app.types\";\n\nconst Modal: React.FC<{image: imageProps}> = (image) => {\n  \n\n    return(\n        <div>\n            <div className=\"modal-text\" id=\"caption\">\n                <p>{image.image.name}</p>\n            </div>\n            <div className=\"modal-content\">\n                <img alt={image.image.alt} src={image.image.url}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Modal;","import React from \"react\";\n\nconst Arrow = ({ direction, onClick }) => {\n  const leftArrow = (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"white-arrow-left clickable\"\n      onClick={onClick} \n    >\n      <path\n        d=\"M16 8L8 12l8 4\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n\n  const rightArrow = (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"white-arrow-right clickable\"\n      onClick={onClick} \n    >\n      <path\n        d=\"M8 8L16 12l-8 4\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n\n  const arrowContent = direction === \"left\" ? leftArrow : rightArrow;\n\n  return arrowContent; \n};\n\nexport default Arrow;\n","import { imageProps } from \"../app.types\";\n\n\nexport function findNextImageById(rows: imageProps[][], currentImageId: number): imageProps | null {\n    const rowIndex = rows.findIndex(row => row.some(image => image.id === currentImageId));\n    if (rowIndex !== -1) {\n      const currentIndex = rows[rowIndex].findIndex(image => image.id === currentImageId);\n  \n      if (currentIndex !== -1) {\n        const nextIndex = currentIndex + 1;\n        if (nextIndex < rows[rowIndex].length) {\n          return rows[rowIndex][nextIndex];\n        } else {\n          for (let i = rowIndex + 1; i < rows.length; i++) {\n            if (rows[i].length > 0) {\n              return rows[i][0]; \n            }\n          }\n          return null;\n        }\n      } else {\n        console.error('Current image not found within the specified row');\n        return null;\n      }\n    } else {\n      console.error('Current image not found in the entire array');\n      return null;\n    }\n    \n}\nexport function findPastImageById(rows: imageProps[][], currentImageId: number): imageProps | null {\n    const rowIndex = rows.findIndex(row => row.some(image => image.id === currentImageId));\n  \n    if (rowIndex !== -1) {\n      const currentIndex = rows[rowIndex].findIndex(image => image.id === currentImageId);\n  \n      if (currentIndex !== -1) {\n        // Check if there's a previous image in the current row\n        const previousIndex = currentIndex - 1;\n  \n        // Handle cases for finding the previous image\n        if (previousIndex >= 0) {\n          return rows[rowIndex][previousIndex]; // Return the previous image in the same row\n        } else {\n          // If no previous image in the current row, iterate backwards through rows\n          for (let i = rowIndex - 1; i >= 0; i--) {\n            if (rows[i].length > 0) {\n              return rows[i][rows[i].length - 1]; // Return the last image in the previous row\n            }\n          }\n        }\n      } else {\n        console.error('Current image not found within the specified row');\n        return null;\n      }\n    } else {\n      console.error('Current image not found in the entire array');\n      return null;\n    }\n  \n    // If no past image found (current image is ID 1)\n    console.log('No past image found (current image is ID 1)');\n    return null;\n  }\n  ","import React, { useState, useEffect } from \"react\";\nimport './ImageGridModal.css';\nimport Modal from \"./components/modal\";\nimport './components/modal.css';\nimport Arrow from \"./components/Arrows\";\nimport { columnSize, imageProps, showModal } from \"../app.types\";\nimport { findNextImageById, findPastImageById } from \"./utils\";\n\nconst ImageGridLightBox:React.FC<{ mainSrc: imageProps[]; colSize: columnSize; showModal: showModal}>  = \n    ( {mainSrc, colSize, showModal }) => {\n    \n    const [columnCss, setColumnCss] = useState('column')\n    const [selectedImage, setSelectedImage] = useState<imageProps | null>(null);\n\n\n    if (!mainSrc || mainSrc.length === 0) {\n        return <div>No images to display</div>; // Example handling\n    }\n    const imageRows = React.useMemo(() => {\n        if (colSize >= 4){\n            setColumnCss(\"column-4\")\n        }\n\n        const rows: imageProps[][] = [];\n        const rowSize = Math.round(mainSrc.length / colSize)\n        console.log(rowSize)\n\n        let startIndex = 0\n        let endIndex = rowSize\n\n        for (let i = 0; i <= colSize -1; i++) {\n            rows.push(mainSrc.slice(startIndex, endIndex));\n            startIndex = endIndex\n            endIndex += rowSize\n        }\n        \n        console.log(rows)\n        return rows;\n        }, [mainSrc, colSize]);\n        \n    const handleImageClick = (image: imageProps) => {\n        console.log(\"image\", image)\n        setSelectedImage(image)\n    }\n    const handleModalClose = () => {\n        setSelectedImage(null)\n    }\n    const moveLeftArrow = () => {\n        const res = findPastImageById(imageRows, selectedImage.id)\n        setSelectedImage(res)\n    }\n    const moveRightArrow = () => {\n        const res = findNextImageById(imageRows, selectedImage.id)\n        setSelectedImage(res)\n    }\n\n    const ImageItems: React.FC<{ images: imageProps[] }> = ({ images }) => {\n        return (\n          <div key={images.length} className={columnCss} > \n            {images.map((image) => (\n              <img key={image.id} \n                src={image.url} \n                alt={image.name}\n                onClick={() => handleImageClick(image)}\n              />\n            ))}\n            {showModal ? (\n                <>\n                    {selectedImage && (\n                    <div id=\"myModal\" className=\"modal\">\n                        <span className=\"close\" onClick={handleModalClose}>&times;</span>\n\n                        <Arrow direction=\"left\" onClick={moveLeftArrow} />\n                        <Arrow direction=\"right\" onClick={moveRightArrow} />\n                        <Modal image={selectedImage} />\n                    </div>\n                    )}\n                </>\n                ) : (\n                <p></p>\n                )}\n\n          </div>\n        );\n    };\n\n    \n        \n    return (  \n        <div className=\"image-component\">\n            <div className=\"row1\">\n                {imageRows.map((row, rowIndex) => (\n                    <ImageItems \n                        key={rowIndex} \n                        images={row} \n                    />\n                ))}            \n            </div>\n        </div>\n    )\n}\n\nexport default ImageGridLightBox;"],"names":[],"mappings":";;AAAA,SAAS,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE;AAC/B,EAAE,KAAK,GAAG,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;AACjC,EAAE,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;AAC9B;AACA,EAAE,IAAI,CAAC,GAAG,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE,EAAE,OAAO,EAAE;AAC1D;AACA,EAAE,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACvE,EAAE,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAC9C,EAAE,KAAK,CAAC,IAAI,GAAG,UAAU,CAAC;AAC1B;AACA,EAAE,IAAI,QAAQ,KAAK,KAAK,EAAE;AAC1B,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;AACzB,MAAM,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAChD,KAAK,MAAM;AACX,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAC9B,KAAK;AACL,GAAG,MAAM;AACT,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAC5B,GAAG;AACH;AACA,EAAE,IAAI,KAAK,CAAC,UAAU,EAAE;AACxB,IAAI,KAAK,CAAC,UAAU,CAAC,OAAO,GAAG,GAAG,CAAC;AACnC,GAAG,MAAM;AACT,IAAI,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;AACpD,GAAG;AACH;;;;;;;;ACrBA,IAAM,KAAK,GAAkC,UAAC,KAAK,EAAA;AAG/C,IAAA,QACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA;AACI,QAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAK,SAAS,EAAC,YAAY,EAAC,EAAE,EAAC,SAAS,EAAA;AACpC,YAAA,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,IAAA,EAAI,KAAK,CAAC,KAAK,CAAC,IAAI,CAAK,CACvB;QACN,KAAK,CAAA,aAAA,CAAA,KAAA,EAAA,EAAA,SAAS,EAAC,eAAe,EAAA;AAC1B,YAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAK,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG,CAChD,CACJ,EACT;AACL,CAAC;;ACfD,IAAM,KAAK,GAAG,UAAC,EAAsB,EAAA;QAApB,SAAS,GAAA,EAAA,CAAA,SAAA,EAAE,OAAO,GAAA,EAAA,CAAA,OAAA,CAAA;AACjC,IAAA,IAAM,SAAS,IACb,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EACE,KAAK,EAAC,IAAI,EACV,MAAM,EAAC,IAAI,EACX,OAAO,EAAC,WAAW,EACnB,IAAI,EAAC,MAAM,EACX,KAAK,EAAC,4BAA4B,EAClC,SAAS,EAAC,4BAA4B,EACtC,OAAO,EAAE,OAAO,EAAA;QAEhB,KACE,CAAA,aAAA,CAAA,MAAA,EAAA,EAAA,CAAC,EAAC,gBAAgB,EAClB,MAAM,EAAC,cAAc,EACrB,WAAW,EAAC,GAAG,EACf,aAAa,EAAC,OAAO,EACrB,cAAc,EAAC,OAAO,EAAA,CACtB,CACE,CACP,CAAC;AAEF,IAAA,IAAM,UAAU,IACd,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EACE,KAAK,EAAC,IAAI,EACV,MAAM,EAAC,IAAI,EACX,OAAO,EAAC,WAAW,EACnB,IAAI,EAAC,MAAM,EACX,KAAK,EAAC,4BAA4B,EAClC,SAAS,EAAC,6BAA6B,EACvC,OAAO,EAAE,OAAO,EAAA;QAEhB,KACE,CAAA,aAAA,CAAA,MAAA,EAAA,EAAA,CAAC,EAAC,iBAAiB,EACnB,MAAM,EAAC,cAAc,EACrB,WAAW,EAAC,GAAG,EACf,aAAa,EAAC,OAAO,EACrB,cAAc,EAAC,OAAO,EAAA,CACtB,CACE,CACP,CAAC;AAEF,IAAA,IAAM,YAAY,GAAG,SAAS,KAAK,MAAM,GAAG,SAAS,GAAG,UAAU,CAAC;AAEnE,IAAA,OAAO,YAAY,CAAC;AACtB,CAAC;;AC3Ce,SAAA,iBAAiB,CAAC,IAAoB,EAAE,cAAsB,EAAA;AAC1E,IAAA,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,UAAA,GAAG,EAAI,EAAA,OAAA,GAAG,CAAC,IAAI,CAAC,UAAA,KAAK,EAAI,EAAA,OAAA,KAAK,CAAC,EAAE,KAAK,cAAc,CAAA,EAAA,CAAC,CAA9C,EAA8C,CAAC,CAAC;AACvF,IAAA,IAAI,QAAQ,KAAK,CAAC,CAAC,EAAE;QACnB,IAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAA,KAAK,EAAI,EAAA,OAAA,KAAK,CAAC,EAAE,KAAK,cAAc,CAAA,EAAA,CAAC,CAAC;AAEpF,QAAA,IAAI,YAAY,KAAK,CAAC,CAAC,EAAE;AACvB,YAAA,IAAM,SAAS,GAAG,YAAY,GAAG,CAAC,CAAC;YACnC,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE;AACrC,gBAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;aAClC;iBAAM;AACL,gBAAA,KAAK,IAAI,CAAC,GAAG,QAAQ,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC/C,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;AACtB,wBAAA,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBACnB;iBACF;AACD,gBAAA,OAAO,IAAI,CAAC;aACb;SACF;aAAM;AACL,YAAA,OAAO,CAAC,KAAK,CAAC,kDAAkD,CAAC,CAAC;AAClE,YAAA,OAAO,IAAI,CAAC;SACb;KACF;SAAM;AACL,QAAA,OAAO,CAAC,KAAK,CAAC,6CAA6C,CAAC,CAAC;AAC7D,QAAA,OAAO,IAAI,CAAC;KACb;AAEL,CAAC;AACe,SAAA,iBAAiB,CAAC,IAAoB,EAAE,cAAsB,EAAA;AAC1E,IAAA,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,UAAA,GAAG,EAAI,EAAA,OAAA,GAAG,CAAC,IAAI,CAAC,UAAA,KAAK,EAAI,EAAA,OAAA,KAAK,CAAC,EAAE,KAAK,cAAc,CAAA,EAAA,CAAC,CAA9C,EAA8C,CAAC,CAAC;AAEvF,IAAA,IAAI,QAAQ,KAAK,CAAC,CAAC,EAAE;QACnB,IAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAA,KAAK,EAAI,EAAA,OAAA,KAAK,CAAC,EAAE,KAAK,cAAc,CAAA,EAAA,CAAC,CAAC;AAEpF,QAAA,IAAI,YAAY,KAAK,CAAC,CAAC,EAAE;;AAEvB,YAAA,IAAM,aAAa,GAAG,YAAY,GAAG,CAAC,CAAC;;AAGvC,YAAA,IAAI,aAAa,IAAI,CAAC,EAAE;gBACtB,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;aACtC;iBAAM;;AAEL,gBAAA,KAAK,IAAI,CAAC,GAAG,QAAQ,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;oBACtC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;AACtB,wBAAA,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;qBACpC;iBACF;aACF;SACF;aAAM;AACL,YAAA,OAAO,CAAC,KAAK,CAAC,kDAAkD,CAAC,CAAC;AAClE,YAAA,OAAO,IAAI,CAAC;SACb;KACF;SAAM;AACL,QAAA,OAAO,CAAC,KAAK,CAAC,6CAA6C,CAAC,CAAC;AAC7D,QAAA,OAAO,IAAI,CAAC;KACb;;AAGD,IAAA,OAAO,CAAC,GAAG,CAAC,6CAA6C,CAAC,CAAC;AAC3D,IAAA,OAAO,IAAI,CAAC;AACd;;ACvDI,IAAA,iBAAiB,GACnB,UAAE,EAA8B,EAAA;AAA7B,IAAA,IAAA,OAAO,aAAA,EAAE,OAAO,GAAA,EAAA,CAAA,OAAA,EAAE,SAAS,GAAA,EAAA,CAAA,SAAA,CAAA;IAExB,IAAA,EAAA,GAA4B,QAAQ,CAAC,QAAQ,CAAC,EAA7C,SAAS,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,YAAY,GAAA,EAAA,CAAA,CAAA,CAAsB,CAAA;IAC9C,IAAA,EAAA,GAAoC,QAAQ,CAAoB,IAAI,CAAC,EAApE,aAAa,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,gBAAgB,GAAA,EAAA,CAAA,CAAA,CAAqC,CAAC;IAG5E,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;QAClC,OAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EAAA,sBAAA,CAA+B,CAAC;KAC1C;AACD,IAAA,IAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,YAAA;AAC5B,QAAA,IAAI,OAAO,IAAI,CAAC,EAAC;YACb,YAAY,CAAC,UAAU,CAAC,CAAA;SAC3B;QAED,IAAM,IAAI,GAAmB,EAAE,CAAC;AAChC,QAAA,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,CAAA;AACpD,QAAA,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;QAEpB,IAAI,UAAU,GAAG,CAAC,CAAA;QAClB,IAAI,QAAQ,GAAG,OAAO,CAAA;AAEtB,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,OAAO,GAAE,CAAC,EAAE,CAAC,EAAE,EAAE;AAClC,YAAA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC;YAC/C,UAAU,GAAG,QAAQ,CAAA;YACrB,QAAQ,IAAI,OAAO,CAAA;SACtB;AAED,QAAA,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;AACjB,QAAA,OAAO,IAAI,CAAC;AACZ,KAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;IAE3B,IAAM,gBAAgB,GAAG,UAAC,KAAiB,EAAA;AACvC,QAAA,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAA;QAC3B,gBAAgB,CAAC,KAAK,CAAC,CAAA;AAC3B,KAAC,CAAA;AACD,IAAA,IAAM,gBAAgB,GAAG,YAAA;QACrB,gBAAgB,CAAC,IAAI,CAAC,CAAA;AAC1B,KAAC,CAAA;AACD,IAAA,IAAM,aAAa,GAAG,YAAA;QAClB,IAAM,GAAG,GAAG,iBAAiB,CAAC,SAAS,EAAE,aAAa,CAAC,EAAE,CAAC,CAAA;QAC1D,gBAAgB,CAAC,GAAG,CAAC,CAAA;AACzB,KAAC,CAAA;AACD,IAAA,IAAM,cAAc,GAAG,YAAA;QACnB,IAAM,GAAG,GAAG,iBAAiB,CAAC,SAAS,EAAE,aAAa,CAAC,EAAE,CAAC,CAAA;QAC1D,gBAAgB,CAAC,GAAG,CAAC,CAAA;AACzB,KAAC,CAAA;IAED,IAAM,UAAU,GAAuC,UAAC,EAAU,EAAA;AAAR,QAAA,IAAA,MAAM,GAAA,EAAA,CAAA,MAAA,CAAA;QAC5D,QACE,KAAK,CAAA,aAAA,CAAA,KAAA,EAAA,EAAA,GAAG,EAAE,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,EAAA;AAC1C,YAAA,MAAM,CAAC,GAAG,CAAC,UAAC,KAAK,EAAA,EAAK,QACrB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAK,GAAG,EAAE,KAAK,CAAC,EAAE,EAChB,GAAG,EAAE,KAAK,CAAC,GAAG,EACd,GAAG,EAAE,KAAK,CAAC,IAAI,EACf,OAAO,EAAE,YAAM,EAAA,OAAA,gBAAgB,CAAC,KAAK,CAAC,CAAvB,EAAuB,GACtC,EACH,EAAA,CAAC;AACD,YAAA,SAAS,IACN,0CACK,aAAa,KACd,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAK,EAAE,EAAC,SAAS,EAAC,SAAS,EAAC,OAAO,EAAA;AAC/B,gBAAA,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,EAAM,SAAS,EAAC,OAAO,EAAC,OAAO,EAAE,gBAAgB,EAAgB,EAAA,QAAA,CAAA;gBAEjE,KAAC,CAAA,aAAA,CAAA,KAAK,IAAC,SAAS,EAAC,MAAM,EAAC,OAAO,EAAE,aAAa,EAAI,CAAA;gBAClD,KAAC,CAAA,aAAA,CAAA,KAAK,IAAC,SAAS,EAAC,OAAO,EAAC,OAAO,EAAE,cAAc,EAAI,CAAA;AACpD,gBAAA,KAAA,CAAA,aAAA,CAAC,KAAK,EAAC,EAAA,KAAK,EAAE,aAAa,EAAA,CAAI,CAC7B,CACL,CACF,KAEH,8BAAO,CACN,CAED,EACN;AACN,KAAC,CAAC;AAIF,IAAA,QACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAK,SAAS,EAAC,iBAAiB,EAAA;AAC5B,QAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAK,SAAS,EAAC,MAAM,EAAA,EAChB,SAAS,CAAC,GAAG,CAAC,UAAC,GAAG,EAAE,QAAQ,EAAA,EAAK,QAC9B,KAAA,CAAA,aAAA,CAAC,UAAU,EAAA,EACP,GAAG,EAAE,QAAQ,EACb,MAAM,EAAE,GAAG,EACb,CAAA,IACL,CAAC,CACA,CACJ,EACT;AACL;;;;","x_google_ignoreList":[0]}